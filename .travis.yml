language: cpp

dist: xenial
  
install:
  - export PROJECT_DIR=$PWD
# set up the cross compiling environment
  - sudo apt-get update 
  - sudo apt-get install -y libc6-armel-cross libc6-dev-armel-cross binutils-arm-linux-gnueabi libncurses5-dev binutils-multiarch
  - sudo dpkg --add-architecture armhf
  - echo "deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ xenial main multiverse restricted universe" > /etc/apt/sources.list
  - echo "deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports/ xenial main multiverse restricted universe" >> /etc/apt/sources.list
  - echo "deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports/ xenial-updates main multiverse restricted universe" >> /etc/apt/sources.list
  - echo "deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ xenial-updates main multiverse restricted universe" >> /etc/apt/sources.list
  - echo "deb [arch=amd64] http://security.ubuntu.com/ubuntu/ xenial-security main multiverse restricted universe" >> /etc/apt/sources.list
  - sudo apt-get update 
  - sudo apt-get install -y libboost-system-dev:armhf libboost-thread-dev:armhf libboost-log-dev:armhf
# clone the rpi tools
  - cd $HOME
  - git clone https://github.com/raspberrypi/tools rpi-tools
# export environment variables
  - export PATH=$PATH:$HOME/rpi-tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin
  - export CXX=arm-linux-gnueabihf-g++
  - export ARCH=arm
  - export CCPREFIX=$HOME/rpi-tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin/arm-linux-gnueabihf-
  - export CC=arm-linux-gnueabihf-gcc
  - export RPI_CROSS_COMPILE=true
  - cd $PROJECT_DIR

script:
#  - wget -O 0001-Support-boost-v1.66.patch.zip https://github.com/GENIVI/vsomeip/files/2244890/0001-Support-boost-v1.66.patch.zip
#  - unzip 0001-Support-boost-v1.66.patch.zip
#  - git apply 0001-Support-boost-v1.66.patch
  - mkdir build
  - cd build 
  - cmake -DENABLE_SIGNAL_HANDLING=1 ..
  - make 
  - make install
  